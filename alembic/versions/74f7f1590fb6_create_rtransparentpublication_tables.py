"""Create RTransparentPublication tables

Revision ID: 74f7f1590fb6
Revises: 4a908d10b459
Create Date: 2024-11-29 16:32:06.283873

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '74f7f1590fb6'
down_revision: Union[str, None] = '4a908d10b459'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('rtransparent_publication',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_open_code', sa.Boolean(), nullable=True),
    sa.Column('is_open_data', sa.Boolean(), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('filename', sa.String(), nullable=True),
    sa.Column('pmcid_pmc', sa.Integer(), nullable=True),
    sa.Column('pmid', sa.Integer(), nullable=True),
    sa.Column('doi', sa.String(), nullable=True),
    sa.Column('year_epub', sa.Integer(), nullable=True),
    sa.Column('year_ppub', sa.Integer(), nullable=True),
    sa.Column('journal', sa.String(), nullable=True),
    sa.Column('publisher', sa.String(), nullable=True),
    sa.Column('affiliation_country', sa.String(), nullable=True),
    sa.Column('affiliation_institution', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('data_text', sa.String(), nullable=True),
    sa.Column('is_relevant_data', sa.Boolean(), nullable=True),
    sa.Column('com_specific_db', sa.String(), nullable=True),
    sa.Column('com_general_db', sa.String(), nullable=True),
    sa.Column('com_github_data', sa.String(), nullable=True),
    sa.Column('dataset', sa.String(), nullable=True),
    sa.Column('com_file_formats', sa.String(), nullable=True),
    sa.Column('com_supplemental_data', sa.String(), nullable=True),
    sa.Column('com_data_availibility', sa.String(), nullable=True),
    sa.Column('code_text', sa.String(), nullable=True),
    sa.Column('is_relevant_code', sa.Boolean(), nullable=True),
    sa.Column('com_code', sa.String(), nullable=True),
    sa.Column('com_suppl_code', sa.String(), nullable=True),
    sa.Column('is_coi_pred', sa.Boolean(), nullable=True),
    sa.Column('coi_text', sa.String(), nullable=True),
    sa.Column('is_coi_pmc_fn', sa.Boolean(), nullable=True),
    sa.Column('is_coi_pmc_title', sa.Boolean(), nullable=True),
    sa.Column('is_relevant_coi', sa.Boolean(), nullable=True),
    sa.Column('is_relevant_coi_hi', sa.Boolean(), nullable=True),
    sa.Column('is_relevant_coi_lo', sa.Boolean(), nullable=True),
    sa.Column('is_explicit_coi', sa.Boolean(), nullable=True),
    sa.Column('coi_1', sa.Boolean(), nullable=True),
    sa.Column('coi_2', sa.Boolean(), nullable=True),
    sa.Column('coi_disclosure_1', sa.Boolean(), nullable=True),
    sa.Column('commercial_1', sa.Boolean(), nullable=True),
    sa.Column('benefit_1', sa.Boolean(), nullable=True),
    sa.Column('consultant_1', sa.Boolean(), nullable=True),
    sa.Column('grants_1', sa.Boolean(), nullable=True),
    sa.Column('brief_1', sa.Boolean(), nullable=True),
    sa.Column('fees_1', sa.Boolean(), nullable=True),
    sa.Column('consults_1', sa.Boolean(), nullable=True),
    sa.Column('connect_1', sa.Boolean(), nullable=True),
    sa.Column('connect_2', sa.Boolean(), nullable=True),
    sa.Column('commercial_ack_1', sa.Boolean(), nullable=True),
    sa.Column('rights_1', sa.Boolean(), nullable=True),
    sa.Column('founder_1', sa.Boolean(), nullable=True),
    sa.Column('advisor_1', sa.Boolean(), nullable=True),
    sa.Column('paid_1', sa.Boolean(), nullable=True),
    sa.Column('board_1', sa.Boolean(), nullable=True),
    sa.Column('no_coi_1', sa.Boolean(), nullable=True),
    sa.Column('no_funder_role_1', sa.Boolean(), nullable=True),
    sa.Column('fund_text', sa.String(), nullable=True),
    sa.Column('fund_pmc_institute', sa.String(), nullable=True),
    sa.Column('fund_pmc_source', sa.String(), nullable=True),
    sa.Column('fund_pmc_anysource', sa.String(), nullable=True),
    sa.Column('is_fund_pmc_group', sa.Boolean(), nullable=True),
    sa.Column('is_fund_pmc_title', sa.Boolean(), nullable=True),
    sa.Column('is_fund_pmc_anysource', sa.Boolean(), nullable=True),
    sa.Column('is_relevant_fund', sa.Boolean(), nullable=True),
    sa.Column('is_explicit_fund', sa.Boolean(), nullable=True),
    sa.Column('support_1', sa.Boolean(), nullable=True),
    sa.Column('support_3', sa.Boolean(), nullable=True),
    sa.Column('support_4', sa.Boolean(), nullable=True),
    sa.Column('support_5', sa.Boolean(), nullable=True),
    sa.Column('support_6', sa.Boolean(), nullable=True),
    sa.Column('support_7', sa.Boolean(), nullable=True),
    sa.Column('support_8', sa.Boolean(), nullable=True),
    sa.Column('support_9', sa.Boolean(), nullable=True),
    sa.Column('support_10', sa.Boolean(), nullable=True),
    sa.Column('developed_1', sa.Boolean(), nullable=True),
    sa.Column('received_1', sa.Boolean(), nullable=True),
    sa.Column('received_2', sa.Boolean(), nullable=True),
    sa.Column('recipient_1', sa.Boolean(), nullable=True),
    sa.Column('authors_1', sa.Boolean(), nullable=True),
    sa.Column('authors_2', sa.Boolean(), nullable=True),
    sa.Column('thank_1', sa.Boolean(), nullable=True),
    sa.Column('thank_2', sa.Boolean(), nullable=True),
    sa.Column('fund_1', sa.Boolean(), nullable=True),
    sa.Column('fund_2', sa.Boolean(), nullable=True),
    sa.Column('fund_3', sa.Boolean(), nullable=True),
    sa.Column('supported_1', sa.Boolean(), nullable=True),
    sa.Column('financial_1', sa.Boolean(), nullable=True),
    sa.Column('financial_2', sa.Boolean(), nullable=True),
    sa.Column('financial_3', sa.Boolean(), nullable=True),
    sa.Column('grant_1', sa.Boolean(), nullable=True),
    sa.Column('french_1', sa.Boolean(), nullable=True),
    sa.Column('common_1', sa.Boolean(), nullable=True),
    sa.Column('common_2', sa.Boolean(), nullable=True),
    sa.Column('common_3', sa.Boolean(), nullable=True),
    sa.Column('common_4', sa.Boolean(), nullable=True),
    sa.Column('common_5', sa.Boolean(), nullable=True),
    sa.Column('acknow_1', sa.Boolean(), nullable=True),
    sa.Column('disclosure_1', sa.Boolean(), nullable=True),
    sa.Column('disclosure_2', sa.Boolean(), nullable=True),
    sa.Column('fund_ack', sa.Boolean(), nullable=True),
    sa.Column('project_ack', sa.Boolean(), nullable=True),
    sa.Column('is_register_pred', sa.Boolean(), nullable=True),
    sa.Column('register_text', sa.String(), nullable=True),
    sa.Column('is_research', sa.Boolean(), nullable=True),
    sa.Column('is_review', sa.Boolean(), nullable=True),
    sa.Column('is_reg_pmc_title', sa.Boolean(), nullable=True),
    sa.Column('is_relevant_reg', sa.Boolean(), nullable=True),
    sa.Column('is_method', sa.Boolean(), nullable=True),
    sa.Column('is_NCT', sa.Boolean(), nullable=True),
    sa.Column('is_explicit_reg', sa.Boolean(), nullable=True),
    sa.Column('prospero_1', sa.Boolean(), nullable=True),
    sa.Column('registered_1', sa.Boolean(), nullable=True),
    sa.Column('registered_2', sa.Boolean(), nullable=True),
    sa.Column('registered_3', sa.Boolean(), nullable=True),
    sa.Column('registered_4', sa.Boolean(), nullable=True),
    sa.Column('registered_5', sa.Boolean(), nullable=True),
    sa.Column('not_registered_1', sa.Boolean(), nullable=True),
    sa.Column('registration_1', sa.Boolean(), nullable=True),
    sa.Column('registration_2', sa.Boolean(), nullable=True),
    sa.Column('registration_3', sa.Boolean(), nullable=True),
    sa.Column('registration_4', sa.Boolean(), nullable=True),
    sa.Column('registry_1', sa.Boolean(), nullable=True),
    sa.Column('reg_title_1', sa.Boolean(), nullable=True),
    sa.Column('reg_title_2', sa.Boolean(), nullable=True),
    sa.Column('reg_title_3', sa.Boolean(), nullable=True),
    sa.Column('reg_title_4', sa.Boolean(), nullable=True),
    sa.Column('funded_ct_1', sa.Boolean(), nullable=True),
    sa.Column('ct_2', sa.Boolean(), nullable=True),
    sa.Column('ct_3', sa.Boolean(), nullable=True),
    sa.Column('protocol_1', sa.Boolean(), nullable=True),
    sa.Column('is_success', sa.Boolean(), nullable=True),
    sa.Column('is_art', sa.Boolean(), nullable=True),
    sa.Column('field', sa.String(), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('jif', sa.Float(), nullable=True),
    sa.Column('eigenfactor_score', sa.Float(), nullable=True),
    sa.Column('n_cite', sa.Float(), nullable=True),
    sa.Column('affiliation_aff_id', sa.String(), nullable=True),
    sa.Column('affiliation_all', sa.String(), nullable=True),
    sa.Column('article', sa.String(), nullable=True),
    sa.Column('author', sa.String(), nullable=True),
    sa.Column('author_aff_id', sa.String(), nullable=True),
    sa.Column('correspondence', sa.String(), nullable=True),
    sa.Column('date_epub', sa.String(), nullable=True),
    sa.Column('date_ppub', sa.String(), nullable=True),
    sa.Column('funding_text', sa.String(), nullable=True),
    sa.Column('is_explicit', sa.Boolean(), nullable=True),
    sa.Column('is_fund_pred', sa.Boolean(), nullable=True),
    sa.Column('is_funded_pred', sa.Boolean(), nullable=True),
    sa.Column('is_relevant', sa.Boolean(), nullable=True),
    sa.Column('is_supplement', sa.Boolean(), nullable=True),
    sa.Column('issn_epub', sa.String(), nullable=True),
    sa.Column('issn_ppub', sa.String(), nullable=True),
    sa.Column('journal_iso', sa.String(), nullable=True),
    sa.Column('journal_nlm', sa.String(), nullable=True),
    sa.Column('license', sa.String(), nullable=True),
    sa.Column('n_affiliation', sa.String(), nullable=True),
    sa.Column('n_auth', sa.String(), nullable=True),
    sa.Column('n_fig_body', sa.String(), nullable=True),
    sa.Column('n_fig_floats', sa.String(), nullable=True),
    sa.Column('n_ref', sa.String(), nullable=True),
    sa.Column('n_table_body', sa.String(), nullable=True),
    sa.Column('n_table_floats', sa.String(), nullable=True),
    sa.Column('open_code_statements', sa.String(), nullable=True),
    sa.Column('open_data_category', sa.String(), nullable=True),
    sa.Column('open_data_statements', sa.String(), nullable=True),
    sa.Column('pii', sa.String(), nullable=True),
    sa.Column('pmcid_uid', sa.String(), nullable=True),
    sa.Column('publisher_id', sa.String(), nullable=True),
    sa.Column('subject', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('is_data_pred', sa.Boolean(), nullable=True),
    sa.Column('is_code_pred', sa.Boolean(), nullable=True),
    sa.Column('work_id', sa.Integer(), nullable=False),
    sa.Column('provenance_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['provenance_id'], ['provenance.id'], ),
    sa.ForeignKeyConstraint(['work_id'], ['works.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('rtransparent_publication')
    # ### end Alembic commands ###
